}
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above( x, 10)
above <- function(x,n = 10) {
use <- x > n
x[use]
}
above( x)
above <- function(x,n = 10) {
use <- x > n
x[use]
}
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for ( i in 1:nc) {
means[i] <- mean( y[,i])
}
means
}
dir
setwd("/home/osboxes/Projects/DataScienceCoursera/")
dor
dir
dir()
my_data <- read.csv("hw1_data.csv")
columemean(my_data)
columnmean(my_data)
columnmean <- function(y, removeNA=TRUE) {
nc <- ncol(y)
means <- numeric(nc)
for ( i in 1:nc) {
means[i] <- mean( y[,i], na.rm = removeNA)
}
means
}
columnmean(my_data)
swirl
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
!5==7
5!=7
5==7
5 == 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
c(TRUE, TRUE, TRUE) & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE).
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical("twins", "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints >5
which(ints)
which(ints[])
which()
which(ints  > 7)
any(ints <0 )
all(ints > 0 )
Sys.Data()
Sys.Date()
mean(c(2,4,5)
)
aa <- function (x) { x}
save aa
aa
source ("aa)")
source ("aa")
source ("aa.R")
aa
aa(1)
submit()
submit()
oring_function('My first function!')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(rnorm, c(1.4, 3.6, 7.9, 8.8).)
evaluate(rnorm, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1],c(8, 4, 0))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[[1]]}, c(8, 4, 0) )
evaluate(function(x){x[[length(x)]]}, c(8, 4, 0) )
?paste
paste("Programming", "is", "fun!")
submit()
SUBMIT()
submit()
submit()
submit9)
submit()
submit()
telegram("aa)")
submit()
submit()
submit()
submit()
mads_lib()
mad_libs()
submit()
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01").
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- s.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
class(2)
class(t2)
str(unclass(t2))
t2$min
weekdays()
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
unclass(t4)
Sys.time() > t1
t1 - Sys.time()
Sys.time()  - t1
difftime(Sys.time(), t1, units = 'days')
lm
lm <- function (x) {x*x}
lm
ls()
args(lm)
search(0)
search()
source("functions.R")
search()
ls()\
ls()\
ls()
lm <- "a"
lm
args(lm)
lm <- "lm"
args(lm)
lm
lm <- 1
lm
args(lm)
f <- function(x,y){}
f <- function(x,y){ x^2 + y/z}
f(1)
f(1,1)
f <- function(x,y){ x^2}
f(1,1)
z <-1
f <- function(x,y){ x^2 + y/z}
f(1,1)
make.power <- function(n){
pow<- function(x) {x^n}
power
pow
}
make.power(3)
a <- make.power(3)
a(2)
a <- make.power(8)
a(2)
a
cube <- make.power(3)
square <- make.power (2)
ls(environment(cube))
get("n")
get("n",environment(cube))
get("pow",environment(cube))
pow<- function(x) {x^n + g(y)}
y <- 10
pow<- function(x) {x^n + g(y)}
pow<- function(x) {y <- 2 ; x^n + g(y)}
pow<- function(x) {y <- 2 ; x^2 + g(y)}
pow(2)
g <- function(y) { y}
pow(2)
g <- function(x) { y}
pow(2)
x <- as.date("1970-01-01")
x <- as.Date("1970-01-01")
unclass(x)
class(x)
p<- as.POSIXlt(Sys.time())
p
unclass(p)
names(p)
names(unclass(p)
)
P$SEC
p$sec
as.POSIXlt(Sys.time())$sec
as.POSIXlt(Sys.time())$sec
as.POSIXlt(Sys.time())$sec
as.POSIXlt(Sys.time())$sec
as.POSIXlt(Sys.time())$sec
as.POSIXlt(Sys.time())$sec
as.POSIXlt(Sys.time())$sec
as.POSIXlt(Sys.time())$month
as.POSIXlt(Sys.time())$mon
as.POSIXlt(Sys.time())
unclass(as.POSIXlt(Sys.time()))
x <- Sys.time(0)
x <- Sys.time()
unclass(x)
x$sec
p <- as.POSIXlt(x)
p$sec
Sys.time()
unclass(Sys.time())
?strptime
x <- c("06-07-19, 5:12am")
d <- strptime(x, format="%y-%m-%d, %I:%M%p")
d
unclass(d)
diff(d)
x <- c("06-07-19", "06-07-20", "06-07-21")
d <- as.Date(x, format="%y-%m-%d")
diff(d)
x <- c("06-07-19", "06-07-20", "06-07-22")
d <- as.Date(x, format="%y-%m-%d")
diff(d)
x <- as.Date("2012-01-01")
unclass(x)
x- d
unclass9x)
unclass(x)
unclass(d)
d <- strptime(x, format="%y-%m-%d, %I:%M%p")
d
y <- strptime("9 Jan 2011 11:34:21", "%d %b %Y  %H:%M:%S")
Y
y
x
unclass9x)
unclass(x)
unclass(y)
x-y
x <- as.POSIXlt(x)
x-y
myplot <- function(...)
{.__C__.environment}
myplot
myplot(1)
myplot <- function(...) {...}
myplot
myplot(1)
myplot <- function(x,...) {x,...}
myplot <- function(x,...) {x}
x
myplot
myplot(1)
myplot(1,2)
myplot <- function(x) {x}
myplot(1,2)
args(paste)
paste1 <- function (...) {paste (...)}
paste1(1)
paste1(1,2)
paste1(1,2,3)
paste1(1,2,3,"a")
paste1 <- function (...) {cat (...)}
paste1(1,2,3,"a")
cat ( 1,2,3)
paste1(1,2,3,"a",sep=":")
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
parent.frame()
a <- function(...)  {parent.frame()}
a
a91)
a(1)
b <- function(...)  {parent.env()}
b
b(1)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
setwd("/home/osboxes/Projects/DataScienceCoursera/specdata/")
dir
dir()
setwd("/home/osboxes/Projects/DataScienceCoursera")
pollutantmean <- function ( directory, pullutant, id = 1:332)
{}
args(pullutantmean)
args(pollutantmean)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 333)
source ("functions.R")
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
paste0
paste0(1,1)
source ("functions.R")
source ("functions.R")
getwd()
setwd("/home/osboxes/Projects/DataScienceCoursera")
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
source ("functions.R")
getwd(0)
getwd()
source ("functions.R")
setwd("/home/osboxes/Projects/DataScienceCoursera")
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
source ("functions.R")
getwd()
setwd("/home/osboxes/Projects/DataScienceCoursera")
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
source ("functions.R")
setwd("/home/osboxes/Projects/DataScienceCoursera")
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
pollutantmean("specdata",sulfate,1:10)
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
pollutantmean("specdata",sulfate,1:10)
iles <- list.files( "specdata", full.names = TRUE)
files <- list.files( "specdata", full.names = TRUE)
files
dat <- data.frame()
dat <- rbind(dat,read.csv(files[1]))
dat
mean(dat[,pollutant], na.rm = TRUE)
mean(dat[,sulfate], na.rm = TRUE)
mean(dat[,"sulfate"], na.rm = TRUE)
sulfatexxx <-"sulfate"
mean(dat[,sulfatexxx], na.rm = TRUE)
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
source ("functions.R")
pollutantmean("specdata",sulfate,1:10)
files
sprintf("000",1)
sprintf("0",1)
sprintf("0#",1)
sprintf("%03d",1)
read.csv(paste0(directory , "\" , sprintf("%03d",i)))
read.csv(paste0("specdata" , "\" , sprintf("%03d",i)))
read.csv(paste0("specdata" , "\" , sprintf("%03d",i)))
i <-1
read.csv(paste0("specdata" , "\" , sprintf("%03d",i)))
paste0("specdata" , "\" , sprintf("%03d",i))
sprintf("%03d",i)
paste0("specdata" , "\" , sprintf("%03d",i))
paste("specdata" , "\" , sprintf("%03d",i))
paste0("specdata" , "\" )
)
x
quit
{}
asdf
sdf
exit
, sprintf("%03d",i)
paste0("specdata"  )
paste0("specdata" , "" )
paste0("specdata" , "\" )
paste0("specdata" , "\" )
paste0("specdata" , "^\" )
paste0("specdata" , "^\" )
paste0("specdata" , "\\" )
paste0("specdata" , "\\" )
paste0("specdata", sep=bslash )
paste0("specdata" , "\m" )
paste0("specdata" , "\m" )
paste0("specdata" , "\n" )
paste0("specdata" , "\" )
d
sep=bslash
d
paste0("specdata" , "\" )
source("functions.R")
pollutantmean("specdata",sulfate,1:10)
pollutantmean("specdata","sulfate",1:10)
source("functions.R")
pollutantmean("specdata","sulfate",1:10)
source("functions.R")
pollutantmean("specdata","sulfate",1:10)
source ("complete.R")
complete
complete("specdata",1)
complete_data <- rep(0, 10)
complete_data
source ("complete.R")
complete_data
complete_data(1)
complete(1)
complete("specdata",1)
complete("specdata",2)
complete("specdata",3)
complete("specdata",4)
complete("specdata",5)
complete("specdata",1:10)
complete("specdata", 1)
complete("specdata", c(1,2,3)
)
source ("complete.R")
complete("specdata", c(1,2,3)
)
source("corr.R")
corr("specdata")
